# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ReqType {
  id: ID!
  name: String!
  projectId: String!
  project: Project!
  requisites: [Requisite!]!
}

type Requisite {
  id: ID!
  number: Float!
  title: String!
  description: String
  projectId: String!
  project: Project!
  scenes: [Scene!]!
  reqTypes: [ReqType!]!
}

type Workday {
  id: ID!
  date: String!
  description: String
  projectId: String!
  project: Project!
  scenes: [Scene!]!
}

type Location {
  id: ID!
  name: String!
  projectId: String!
  project: Project!
  scenes: [Scene!]!
}

type Scene {
  id: ID!
  number: Float!
  isCompleted: Boolean!
  title: String
  description: String
  projectId: String!
  project: Project!
  workdays: [Workday!]!
  requisites: [Requisite!]!
  locations: [Location!]!
}

type Project {
  id: ID!
  title: String!
  description: String
  ownerId: String!
  owner: User!
  workdays: [Workday!]!
  locations: [Location!]!
  reqTypes: [ReqType!]!
  scenes: [Scene!]!
  requisites: [Requisite!]!
}

type User {
  id: ID!
  email: String!
  name: String
  phone: String
  projects: [Project!]!
}

type WorkdayUpdateScenesResponse {
  updatedWorkday: Workday!
  updatedScenes: [Scene!]!
}

type RequisiteUpdateScenesResponse {
  updatedRequisite: Requisite!
  updatedScenes: [Scene!]!
}

type RequisiteUpdateReqTypesResponse {
  updatedRequisite: Requisite!
  updatedReqTypes: [ReqType!]!
}

type SceneUpdateRequisitesResponse {
  updatedScene: Scene!
  updatedRequisites: [Requisite!]!
}

type SceneUpdateLocationsResponse {
  updatedScene: Scene!
  updatedLocations: [Location!]!
}

type SceneUpdateWorkdaysResponse {
  updatedScene: Scene!
  updatedWorkdays: [Workday!]!
}

type AuthResponseWeb {
  accessToken: String!
  user: User!
}

type Query {
  me: User!
  ownedProjects: [Project!]!
  workdays(projectId: String!): [Workday!]!
  workday(workdayId: String!): Workday!
  locations(projectId: String!): [Location!]!
  scenes(projectId: String!): [Scene!]!
  scene(sceneId: String!): Scene!
  requisites(projectId: String!): [Requisite!]!
  requisite(requisiteId: String!): Requisite!
  reqTypes(projectId: String!): [ReqType!]!
}

type Mutation {
  loginWeb(input: AuthInput!): AuthResponseWeb!
  registerWeb(input: AuthInput!): AuthResponseWeb!
  logoutWeb: Boolean!
  forceLogoutWeb: Boolean!
  updateMe(input: UserUpdateInput!): User!
  deleteMe: Boolean!

  """Create new project"""
  createProject(input: ProjectCreateInput!): Project!
  updateProject(input: ProjectUpdateInput!, projectId: String!): Project!
  deleteProject(projectId: String!): Boolean!
  createWorkday(projectId: String!, input: WorkdayCreateInput!): Workday!
  updateWorkday(workdayId: String!, input: WorkdayUpdateInput!): Workday!
  deleteWorkday(workdayId: String!): Boolean!
  updateWorkdayScenes(sceneIds: [String!]!, workdayId: String!): WorkdayUpdateScenesResponse!
  addScenesToWorkday(sceneIds: [String!]!, workdayId: String!): Workday!
  removeScenesFromWorkday(sceneIds: [String!]!, workdayId: String!): Boolean!
  createLocation(projectId: String!, input: LocationCreateInput!): Location!
  updateLocation(locationId: String!, input: LocationUpdateInput!): Location!
  deleteLocation(locationId: String!): Boolean!
  createScene(input: SceneCreateInput!, projectId: String!): Scene!
  updateScene(sceneId: String!, input: SceneUpdateInput!): Scene!
  completeManyScenes(sceneIds: [String!]!): [Scene!]!
  deleteScene(sceneId: String!): Boolean!
  updateSceneRequisites(requisiteIds: [String!]!, sceneId: String!): SceneUpdateRequisitesResponse!
  updateSceneLocations(locationIds: [String!]!, sceneId: String!): SceneUpdateLocationsResponse!
  updateSceneWorkdays(workdayIds: [String!]!, sceneId: String!): SceneUpdateWorkdaysResponse!
  createRequisite(projectId: String!, input: RequisiteCreateInput!): Requisite!
  updateRequisite(requisiteId: String!, input: RequisiteUpdateInput!): Requisite!
  deleteRequisite(requisiteId: String!): Boolean!
  updateRequisiteScenes(sceneIds: [String!]!, requisiteId: String!): RequisiteUpdateScenesResponse!
  updateRequisiteReqTypes(reqTypeIds: [String!]!, requisiteId: String!): RequisiteUpdateReqTypesResponse!
  createReqType(projectId: String!, input: ReqTypeCreateInput!): ReqType!
  updateReqType(reqTypeId: String!, input: ReqTypeUpdateInput!): ReqType!
  deleteReqType(reqTypeId: String!): Boolean!
}

input AuthInput {
  email: String!
  password: String!
}

input UserUpdateInput {
  phone: String
  name: String
  email: String
}

input ProjectCreateInput {
  title: String!
  description: String
}

input ProjectUpdateInput {
  title: String
  description: String
}

input WorkdayCreateInput {
  date: String!
  description: String
}

input WorkdayUpdateInput {
  date: String
  description: String
}

input LocationCreateInput {
  name: String!
}

input LocationUpdateInput {
  name: String
}

input SceneCreateInput {
  number: Int!
  title: String
  description: String
}

input SceneUpdateInput {
  number: Int
  title: String
  description: String
  isCompleted: Boolean
}

input RequisiteCreateInput {
  number: Int!
  title: String!
  description: String
}

input RequisiteUpdateInput {
  title: String
  description: String
}

input ReqTypeCreateInput {
  name: String!
}

input ReqTypeUpdateInput {
  name: String
}
